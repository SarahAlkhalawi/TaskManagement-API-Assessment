name: taskmanagement-ci
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
    - name: TaskManagement-API
      uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: "8.0"
    - name: Install dependencies
      run: dotnet restore TaskManagement.csproj
    - name: Run code formatting check
      run: |
        dotnet tool install -g dotnet-format
        dotnet format --verify-no-changes --verbosity diagnostic
        
  test:
    runs-on: ubuntu-latest
    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
        ports:
          - 1433:1433
        options: >-
          --health-cmd="/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${{ secrets.TEST_DB_PASSWORD }} -Q 'SELECT 1'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
    steps:
    - name: TaskManagement-API
      uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: "8.0"
    - name: Install dependencies
      run: dotnet restore TaskManagement.csproj
    - name: Build application
      run: dotnet build TaskManagement.csproj --no-restore --configuration Release
    - name: Run tests
      env:
        ConnectionStrings__TaskManagementConnection: ${{ secrets.TEST_CONNECTION_STRING }}
        Jwt__Key: ${{ secrets.TEST_JWT_KEY }}
        Jwt__Issuer: ${{ secrets.TEST_JWT_ISSUER }}
        Jwt__Audience: ${{ secrets.TEST_JWT_AUDIENCE }}
      run: dotnet test --no-build --configuration Release --verbosity normal

  build:
    needs: [linting, test]
    runs-on: ubuntu-latest
    steps:
    - name: TaskManagement-API
      uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: "8.0"
    - name: Install dependencies
      run: dotnet restore TaskManagement.csproj
    - name: Build application
      run: dotnet build TaskManagement.csproj --no-restore --configuration Release
    - name: Publish application
      run: dotnet publish TaskManagement.csproj -c Release -o ./publish
    - name: Build docker image
      run: docker build --tag taskmanagement-api:latest .